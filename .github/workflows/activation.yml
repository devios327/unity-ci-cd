name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - uses: actions/checkout@v4
        with:
          lfs: true

      ###########################
      #          Cache          #
      ###########################
      - uses: actions/cache@v4
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-ubuntu-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-ubuntu-
            Library-

      # Build
      # - name: Build project
      #   uses: game-ci/unity-builder@v4
      #   env:
      #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #     UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      #     UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      #   with:
      #     targetPlatform: StandaloneWindows64

      ###########################
      #          Build          #
      ###########################
      - name: Build
        uses: ./
        id: build-1
        continue-on-error: true
        timeout-minutes: 30
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          buildName: "GameCI Test Build"
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: -profile SomeProfile -someBoolean -someValue exampleValue
          allowDirtyBuild: true
      # We use dirty build because we are replacing the default project settings file above

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build
